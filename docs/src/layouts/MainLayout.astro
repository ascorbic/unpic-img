---
import type { MarkdownHeading } from "astro";
import HeadCommon from "../components/HeadCommon.astro";
import Header from "../components/Header/Header.astro";
import Footer from "../components/Footer/Footer.astro";
import { GITHUB_EDIT_URL, SITE } from "../consts";

type Props = {
  title: string;
};

const { title } = Astro.props;
const currentPage = Astro.url.pathname;
const currentFile = `src/content/docs${currentPage.replace(/\/$/, "")}.md`;
---

<html dir="ltr" lang="en" class="initial">
  <head>
    <HeadCommon />
    <slot name="head" />
    <title>
      {`${title} â€“ ${SITE.title}`}
    </title>
  </head>

  <body>
    <Header currentPage={currentPage} />
    <main class="layout">
      <aside id="grid-left" class="grid-sidebar" title="Site Navigation">
        <slot name="left-sidebar" />
      </aside>
      <div id="grid-main">
        <slot name="main" />
      </div>
      <aside id="grid-right" class="grid-sidebar" title="Table of Contents">
        <slot name="right-sidebar" />
      </aside>
    </main>
    <Footer path={currentFile} />
    <style>
      body {
        width: 100%;
        display: grid;
        grid-template-rows: var(--theme-navbar-height) 1fr;
        --gutter: 0.5rem;
        --doc-padding: 2rem;
      }

      .layout {
        display: grid;
        grid-auto-flow: column;
        grid-template-columns:
          minmax(var(--gutter), 1fr) minmax(0, var(--max-width))
          minmax(var(--gutter), 1fr);
        overflow-x: hidden;
      }

      .grid-sidebar {
        height: 100vh;
        position: sticky;
        top: 0;
        padding: 0;
      }

      #grid-left {
        position: fixed;
        background-color: var(--theme-bg);
        z-index: 10;
        display: none;
      }

      #grid-main {
        padding: var(--doc-padding) var(--gutter);
        grid-column: 2;
        display: flex;
        flex-direction: column;
        height: 100%;
      }

      #grid-right {
        display: none;
      }

      @media (min-width: 50em) {
        .layout {
          overflow: initial;
          grid-template-columns: 20rem minmax(0, var(--max-width));
          gap: 1em;
        }

        #grid-left {
          display: flex;
          padding-left: 2rem;
          position: sticky;
          grid-column: 1;
        }
      }

      @media (min-width: 72em) {
        .layout {
          grid-template-columns: 20rem minmax(0, var(--max-width)) 18rem;
          padding-left: 0;
          padding-right: 0;
          margin: 0 auto;
        }

        #grid-right {
          grid-column: 3;
          display: flex;
        }
      }

      :global(.mobile-sidebar-toggle) {
        overflow: hidden;
      }

      :global(.mobile-sidebar-toggle) #grid-left {
        display: block;
        top: 2rem;
      }
    </style>
    <style is:global>
      .layout > * {
        width: 100%;
        height: 100%;
      }
    </style>
  </body>
</html>
