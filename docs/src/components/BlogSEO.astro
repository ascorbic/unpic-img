---
import type { CollectionEntry } from "astro:content";
import { SITE, OPEN_GRAPH } from "../consts";

import { getImage } from "astro:assets";
import { transformUrl } from "unpic";

type Props = { canonicalUrl: URL } & CollectionEntry<"blog">["data"];

const { image, title, description, canonicalUrl } = Astro.props;
const formattedContentTitle = `${title ?? ""} â€“ ${SITE.title}`;

const img = image
  ? transformUrl({
      url: image,
      width: 1200,
      height: 630,
      fallback: "astro",
    })
  : null;

const og = new URL("/og-blog.png", Astro.site);
og.searchParams.set("title", title ?? "");
og.searchParams.set("img", img ?? "");

const imageSrc = og.toString();
const imageAlt = description ?? OPEN_GRAPH.image.alt;
---

<!-- Page Metadata -->
<link rel="canonical" href={canonicalUrl} />

<!-- OpenGraph Tags -->
<meta property="og:title" content={formattedContentTitle} />
<meta property="og:type" content="article" />
<meta property="og:url" content={canonicalUrl} />
<meta property="og:locale" content={SITE.defaultLanguage} />
<meta
  property="og:image"
  content={img ? new URL(img, Astro.site).href : imageSrc}
/>
<meta property="og:image:alt" content={imageAlt} />
<meta
  name="description"
  property="og:description"
  content={description ?? SITE.description}
/>
<meta property="og:site_name" content={SITE.title} />

<!-- Twitter Tags -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content={OPEN_GRAPH.twitter} />
<meta name="twitter:title" content={formattedContentTitle} />
<meta name="twitter:description" content={description ?? SITE.description} />
<meta name="twitter:image" content={imageSrc} />
<meta name="twitter:image:alt" content={imageAlt} />

<!--
  TODO: Add json+ld data, maybe https://schema.org/APIReference makes sense?
  Docs: https://developers.google.com/search/docs/advanced/structured-data/intro-structured-data
  https://www.npmjs.com/package/schema-dts seems like a great resource for implementing this.
  Even better, there's a React component that integrates with `schema-dts`: https://github.com/google/react-schemaorg
-->
